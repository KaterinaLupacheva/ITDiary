<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
        "
>
    <context:component-scan base-package="by.mycompany.diary"/>


    <mvc:annotation-driven/>

    <aop:aspectj-autoproxy/>

    <!-- Define Spring MVC view resolver -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--&lt;!&ndash; Step 1: Define Database DataSource / connection pool &ndash;&gt;-->
    <!--<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"-->
          <!--destroy-method="close">-->
        <!--<property name="driverClass" value="com.mysql.jdbc.Driver"/>-->
        <!--<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/itdiary?useSSL=false&amp;serverTimezone=UTC"/>-->
        <!--<property name="user" value="root"/>-->
        <!--<property name="password" value="root"/>-->

        <!--&lt;!&ndash; these are connection pool properties for C3P0 &ndash;&gt;-->
        <!--<property name="minPoolSize" value="5"/>-->
        <!--<property name="maxPoolSize" value="20"/>-->
        <!--<property name="maxIdleTime" value="30000"/>-->
    <!--</bean>-->

    <!--Heroku Postgres -->
    <!--<bean class="java.net.URI" id="dbUrl">-->
        <!--<constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>-->
    <!--</bean>-->

    <bean id="myDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://ec2-54-228-212-134.eu-west-1.compute.amazonaws.com:5432/dc7umh5t691mo1?sslmode=require"/>
        <property name="username" value="ejebigygeolgom"/>
        <property name="password" value="cbd44bc4464e3d92fff2daa2be66788a53b42e228fa33c92baf1786c20eeb979"/>
    </bean>

    <!-- Step 2: Setup Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="packagesToScan" value="by.mycompany.diary.entity"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>-->
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <!-- Step 3: Setup Hibernate transaction manager -->
    <bean id="myTransactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Step 4: Enable configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="myTransactionManager"/>

    <!-- Add support for reading web resources: css, images, js, etc ... -->
    <mvc:resources location="/res/" mapping="/res/**"/>
</beans>